// Mocks generated by Mockito 5.2.0 from annotations
// in gomucore/test/presentation/screen/gomu_search_screen_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:gomucore/gomucore.dart' as _i4;
import 'package:gomumovie/gomumovie.dart' as _i3;
import 'package:gomutv/gomutv.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeSearchGomuflixTvCase_0 extends _i1.Fake
    implements _i2.SearchGomuflixTvCase {}

class _FakeSearchGomuflixMovie_1 extends _i1.Fake
    implements _i3.SearchGomuflixMovie {}

/// A class which mocks [GomuflixTvSearchNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockGomuflixTvSearchNotifier extends _i1.Mock
    implements _i2.GomuflixTvSearchNotifier {
  MockGomuflixTvSearchNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SearchGomuflixTvCase get searchTv => (super.noSuchMethod(
      Invocation.getter(#searchTv),
      returnValue: _FakeSearchGomuflixTvCase_0()) as _i2.SearchGomuflixTvCase);
  @override
  set searchTv(_i2.SearchGomuflixTvCase? _searchTv) =>
      super.noSuchMethod(Invocation.setter(#searchTv, _searchTv),
          returnValueForMissingStub: null);
  @override
  List<_i2.GomuflixTvEntity> get foundSearchTv =>
      (super.noSuchMethod(Invocation.getter(#foundSearchTv),
          returnValue: <_i2.GomuflixTvEntity>[]) as List<_i2.GomuflixTvEntity>);
  @override
  set foundSearchTv(List<_i2.GomuflixTvEntity>? _foundSearchTv) =>
      super.noSuchMethod(Invocation.setter(#foundSearchTv, _foundSearchTv),
          returnValueForMissingStub: null);
  @override
  _i4.RequestState get stateVar =>
      (super.noSuchMethod(Invocation.getter(#stateVar),
          returnValue: _i4.RequestState.empty) as _i4.RequestState);
  @override
  set stateVar(_i4.RequestState? _stateVar) =>
      super.noSuchMethod(Invocation.setter(#stateVar, _stateVar),
          returnValueForMissingStub: null);
  @override
  String get messageVar =>
      (super.noSuchMethod(Invocation.getter(#messageVar), returnValue: '')
          as String);
  @override
  set messageVar(String? _messageVar) =>
      super.noSuchMethod(Invocation.setter(#messageVar, _messageVar),
          returnValueForMissingStub: null);
  @override
  List<_i2.GomuflixTvEntity> get searchResult =>
      (super.noSuchMethod(Invocation.getter(#searchResult),
          returnValue: <_i2.GomuflixTvEntity>[]) as List<_i2.GomuflixTvEntity>);
  @override
  _i4.RequestState get searchState =>
      (super.noSuchMethod(Invocation.getter(#searchState),
          returnValue: _i4.RequestState.empty) as _i4.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i5.Future<void> syncSearchTv(String? query) =>
      (super.noSuchMethod(Invocation.method(#syncSearchTv, [query]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  void addListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [GomuflixMovieSearchNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockGomuflixMovieSearchNotifier extends _i1.Mock
    implements _i3.GomuflixMovieSearchNotifier {
  MockGomuflixMovieSearchNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.SearchGomuflixMovie get searchMovie => (super.noSuchMethod(
      Invocation.getter(#searchMovie),
      returnValue: _FakeSearchGomuflixMovie_1()) as _i3.SearchGomuflixMovie);
  @override
  set searchMovie(_i3.SearchGomuflixMovie? _searchMovie) =>
      super.noSuchMethod(Invocation.setter(#searchMovie, _searchMovie),
          returnValueForMissingStub: null);
  @override
  _i4.RequestState get stateVar =>
      (super.noSuchMethod(Invocation.getter(#stateVar),
          returnValue: _i4.RequestState.empty) as _i4.RequestState);
  @override
  set stateVar(_i4.RequestState? _stateVar) =>
      super.noSuchMethod(Invocation.setter(#stateVar, _stateVar),
          returnValueForMissingStub: null);
  @override
  String get messageVar =>
      (super.noSuchMethod(Invocation.getter(#messageVar), returnValue: '')
          as String);
  @override
  set messageVar(String? _messageVar) =>
      super.noSuchMethod(Invocation.setter(#messageVar, _messageVar),
          returnValueForMissingStub: null);
  @override
  List<_i3.GomuflixMovieEntity> get searchResult =>
      (super.noSuchMethod(Invocation.getter(#searchResult),
              returnValue: <_i3.GomuflixMovieEntity>[])
          as List<_i3.GomuflixMovieEntity>);
  @override
  _i4.RequestState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: _i4.RequestState.empty) as _i4.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i5.Future<void> syncSearchMovie(String? query) =>
      (super.noSuchMethod(Invocation.method(#syncSearchMovie, [query]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  void addListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
