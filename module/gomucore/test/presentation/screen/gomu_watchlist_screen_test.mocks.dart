// Mocks generated by Mockito 5.2.0 from annotations
// in gomucore/test/presentation/screen/gomu_watchlist_screen_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:gomucore/gomucore.dart' as _i4;
import 'package:gomumovie/gomumovie.dart' as _i3;
import 'package:gomutv/gomutv.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetGomuflixTvListCase_0 extends _i1.Fake
    implements _i2.GetGomuflixTvListCase {}

class _FakeGetGomuflixTvWatchlistCase_1 extends _i1.Fake
    implements _i2.GetGomuflixTvWatchlistCase {}

class _FakeGetGomuflixMovieListCase_2 extends _i1.Fake
    implements _i3.GetGomuflixMovieListCase {}

class _FakeGetGomuflixMovieWatchlistCase_3 extends _i1.Fake
    implements _i3.GetGomuflixMovieWatchlistCase {}

/// A class which mocks [GomuflixTvListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockGomuflixTvListNotifier extends _i1.Mock
    implements _i2.GomuflixTvListNotifier {
  MockGomuflixTvListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetGomuflixTvListCase get getGomuTvOnAirCase =>
      (super.noSuchMethod(Invocation.getter(#getGomuTvOnAirCase),
              returnValue: _FakeGetGomuflixTvListCase_0())
          as _i2.GetGomuflixTvListCase);
  @override
  set getGomuTvOnAirCase(_i2.GetGomuflixTvListCase? _getGomuTvOnAirCase) =>
      super.noSuchMethod(
          Invocation.setter(#getGomuTvOnAirCase, _getGomuTvOnAirCase),
          returnValueForMissingStub: null);
  @override
  _i2.GetGomuflixTvListCase get getGomuTvPopularCase =>
      (super.noSuchMethod(Invocation.getter(#getGomuTvPopularCase),
              returnValue: _FakeGetGomuflixTvListCase_0())
          as _i2.GetGomuflixTvListCase);
  @override
  set getGomuTvPopularCase(_i2.GetGomuflixTvListCase? _getGomuTvPopularCase) =>
      super.noSuchMethod(
          Invocation.setter(#getGomuTvPopularCase, _getGomuTvPopularCase),
          returnValueForMissingStub: null);
  @override
  _i2.GetGomuflixTvListCase get getGomuTvTopRatedCase =>
      (super.noSuchMethod(Invocation.getter(#getGomuTvTopRatedCase),
              returnValue: _FakeGetGomuflixTvListCase_0())
          as _i2.GetGomuflixTvListCase);
  @override
  set getGomuTvTopRatedCase(
          _i2.GetGomuflixTvListCase? _getGomuTvTopRatedCase) =>
      super.noSuchMethod(
          Invocation.setter(#getGomuTvTopRatedCase, _getGomuTvTopRatedCase),
          returnValueForMissingStub: null);
  @override
  _i2.GetGomuflixTvWatchlistCase get getGomuTvWatchlistCase =>
      (super.noSuchMethod(Invocation.getter(#getGomuTvWatchlistCase),
              returnValue: _FakeGetGomuflixTvWatchlistCase_1())
          as _i2.GetGomuflixTvWatchlistCase);
  @override
  set getGomuTvWatchlistCase(
          _i2.GetGomuflixTvWatchlistCase? _getGomuTvWatchlistCase) =>
      super.noSuchMethod(
          Invocation.setter(#getGomuTvWatchlistCase, _getGomuTvWatchlistCase),
          returnValueForMissingStub: null);
  @override
  List<_i2.GomuflixTvEntity> get onAirTvVar =>
      (super.noSuchMethod(Invocation.getter(#onAirTvVar),
          returnValue: <_i2.GomuflixTvEntity>[]) as List<_i2.GomuflixTvEntity>);
  @override
  set onAirTvVar(List<_i2.GomuflixTvEntity>? _onAirTvVar) =>
      super.noSuchMethod(Invocation.setter(#onAirTvVar, _onAirTvVar),
          returnValueForMissingStub: null);
  @override
  List<_i2.GomuflixTvEntity> get popularTvVar =>
      (super.noSuchMethod(Invocation.getter(#popularTvVar),
          returnValue: <_i2.GomuflixTvEntity>[]) as List<_i2.GomuflixTvEntity>);
  @override
  set popularTvVar(List<_i2.GomuflixTvEntity>? _popularTvVar) =>
      super.noSuchMethod(Invocation.setter(#popularTvVar, _popularTvVar),
          returnValueForMissingStub: null);
  @override
  List<_i2.GomuflixTvEntity> get topRatedTvVar =>
      (super.noSuchMethod(Invocation.getter(#topRatedTvVar),
          returnValue: <_i2.GomuflixTvEntity>[]) as List<_i2.GomuflixTvEntity>);
  @override
  set topRatedTvVar(List<_i2.GomuflixTvEntity>? _topRatedTvVar) =>
      super.noSuchMethod(Invocation.setter(#topRatedTvVar, _topRatedTvVar),
          returnValueForMissingStub: null);
  @override
  List<_i2.GomuflixTvEntity> get watchlistTvVar =>
      (super.noSuchMethod(Invocation.getter(#watchlistTvVar),
          returnValue: <_i2.GomuflixTvEntity>[]) as List<_i2.GomuflixTvEntity>);
  @override
  set watchlistTvVar(List<_i2.GomuflixTvEntity>? _watchlistTvVar) =>
      super.noSuchMethod(Invocation.setter(#watchlistTvVar, _watchlistTvVar),
          returnValueForMissingStub: null);
  @override
  List<_i2.GomuflixTvEntity> get gomuTv =>
      (super.noSuchMethod(Invocation.getter(#gomuTv),
          returnValue: <_i2.GomuflixTvEntity>[]) as List<_i2.GomuflixTvEntity>);
  @override
  set gomuTv(List<_i2.GomuflixTvEntity>? _gomuTv) =>
      super.noSuchMethod(Invocation.setter(#gomuTv, _gomuTv),
          returnValueForMissingStub: null);
  @override
  _i4.RequestState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: _i4.RequestState.empty) as _i4.RequestState);
  @override
  set state(_i4.RequestState? _state) =>
      super.noSuchMethod(Invocation.setter(#state, _state),
          returnValueForMissingStub: null);
  @override
  String get messageVar =>
      (super.noSuchMethod(Invocation.getter(#messageVar), returnValue: '')
          as String);
  @override
  set messageVar(String? _messageVar) =>
      super.noSuchMethod(Invocation.setter(#messageVar, _messageVar),
          returnValueForMissingStub: null);
  @override
  List<_i2.GomuflixTvEntity> get onAirTv =>
      (super.noSuchMethod(Invocation.getter(#onAirTv),
          returnValue: <_i2.GomuflixTvEntity>[]) as List<_i2.GomuflixTvEntity>);
  @override
  List<_i2.GomuflixTvEntity> get popularTv =>
      (super.noSuchMethod(Invocation.getter(#popularTv),
          returnValue: <_i2.GomuflixTvEntity>[]) as List<_i2.GomuflixTvEntity>);
  @override
  List<_i2.GomuflixTvEntity> get topRatedTv =>
      (super.noSuchMethod(Invocation.getter(#topRatedTv),
          returnValue: <_i2.GomuflixTvEntity>[]) as List<_i2.GomuflixTvEntity>);
  @override
  List<_i2.GomuflixTvEntity> get watchlistTv =>
      (super.noSuchMethod(Invocation.getter(#watchlistTv),
          returnValue: <_i2.GomuflixTvEntity>[]) as List<_i2.GomuflixTvEntity>);
  @override
  List<_i2.GomuflixTvEntity> get tv =>
      (super.noSuchMethod(Invocation.getter(#tv),
          returnValue: <_i2.GomuflixTvEntity>[]) as List<_i2.GomuflixTvEntity>);
  @override
  _i4.RequestState get gomuTvOnAirState =>
      (super.noSuchMethod(Invocation.getter(#gomuTvOnAirState),
          returnValue: _i4.RequestState.empty) as _i4.RequestState);
  @override
  _i4.RequestState get gomuTvPopularState =>
      (super.noSuchMethod(Invocation.getter(#gomuTvPopularState),
          returnValue: _i4.RequestState.empty) as _i4.RequestState);
  @override
  _i4.RequestState get gomuTvTopRatedState =>
      (super.noSuchMethod(Invocation.getter(#gomuTvTopRatedState),
          returnValue: _i4.RequestState.empty) as _i4.RequestState);
  @override
  _i4.RequestState get gomuTvWatchlistState =>
      (super.noSuchMethod(Invocation.getter(#gomuTvWatchlistState),
          returnValue: _i4.RequestState.empty) as _i4.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i5.Future<void> syncGomuTvOnAir() =>
      (super.noSuchMethod(Invocation.method(#syncGomuTvOnAir, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> syncGomuTvPopular() =>
      (super.noSuchMethod(Invocation.method(#syncGomuTvPopular, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> syncGomuTvTopRated() =>
      (super.noSuchMethod(Invocation.method(#syncGomuTvTopRated, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> syncGomuTvWatchlist() =>
      (super.noSuchMethod(Invocation.method(#syncGomuTvWatchlist, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  void addListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [GomuflixMovieListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockGomuflixMovieListNotifier extends _i1.Mock
    implements _i3.GomuflixMovieListNotifier {
  MockGomuflixMovieListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GetGomuflixMovieListCase get getNowPlayingMovies =>
      (super.noSuchMethod(Invocation.getter(#getNowPlayingMovies),
              returnValue: _FakeGetGomuflixMovieListCase_2())
          as _i3.GetGomuflixMovieListCase);
  @override
  set getNowPlayingMovies(_i3.GetGomuflixMovieListCase? _getNowPlayingMovies) =>
      super.noSuchMethod(
          Invocation.setter(#getNowPlayingMovies, _getNowPlayingMovies),
          returnValueForMissingStub: null);
  @override
  _i3.GetGomuflixMovieListCase get getPopularMovies =>
      (super.noSuchMethod(Invocation.getter(#getPopularMovies),
              returnValue: _FakeGetGomuflixMovieListCase_2())
          as _i3.GetGomuflixMovieListCase);
  @override
  set getPopularMovies(_i3.GetGomuflixMovieListCase? _getPopularMovies) => super
      .noSuchMethod(Invocation.setter(#getPopularMovies, _getPopularMovies),
          returnValueForMissingStub: null);
  @override
  _i3.GetGomuflixMovieListCase get getTopRatedMovies =>
      (super.noSuchMethod(Invocation.getter(#getTopRatedMovies),
              returnValue: _FakeGetGomuflixMovieListCase_2())
          as _i3.GetGomuflixMovieListCase);
  @override
  set getTopRatedMovies(_i3.GetGomuflixMovieListCase? _getTopRatedMovies) =>
      super.noSuchMethod(
          Invocation.setter(#getTopRatedMovies, _getTopRatedMovies),
          returnValueForMissingStub: null);
  @override
  _i3.GetGomuflixMovieWatchlistCase get getWatchlistMovies =>
      (super.noSuchMethod(Invocation.getter(#getWatchlistMovies),
              returnValue: _FakeGetGomuflixMovieWatchlistCase_3())
          as _i3.GetGomuflixMovieWatchlistCase);
  @override
  set getWatchlistMovies(
          _i3.GetGomuflixMovieWatchlistCase? _getWatchlistMovies) =>
      super.noSuchMethod(
          Invocation.setter(#getWatchlistMovies, _getWatchlistMovies),
          returnValueForMissingStub: null);
  @override
  List<_i3.GomuflixMovieEntity> get nowPlayingMovieVar =>
      (super.noSuchMethod(Invocation.getter(#nowPlayingMovieVar),
              returnValue: <_i3.GomuflixMovieEntity>[])
          as List<_i3.GomuflixMovieEntity>);
  @override
  set nowPlayingMovieVar(List<_i3.GomuflixMovieEntity>? _nowPlayingMovieVar) =>
      super.noSuchMethod(
          Invocation.setter(#nowPlayingMovieVar, _nowPlayingMovieVar),
          returnValueForMissingStub: null);
  @override
  List<_i3.GomuflixMovieEntity> get popularMovieVar =>
      (super.noSuchMethod(Invocation.getter(#popularMovieVar),
              returnValue: <_i3.GomuflixMovieEntity>[])
          as List<_i3.GomuflixMovieEntity>);
  @override
  set popularMovieVar(List<_i3.GomuflixMovieEntity>? _popularMovieVar) =>
      super.noSuchMethod(Invocation.setter(#popularMovieVar, _popularMovieVar),
          returnValueForMissingStub: null);
  @override
  List<_i3.GomuflixMovieEntity> get topRatedMovieVar =>
      (super.noSuchMethod(Invocation.getter(#topRatedMovieVar),
              returnValue: <_i3.GomuflixMovieEntity>[])
          as List<_i3.GomuflixMovieEntity>);
  @override
  set topRatedMovieVar(List<_i3.GomuflixMovieEntity>? _topRatedMovieVar) =>
      super.noSuchMethod(
          Invocation.setter(#topRatedMovieVar, _topRatedMovieVar),
          returnValueForMissingStub: null);
  @override
  List<_i3.GomuflixMovieEntity> get watchlistMovieVar =>
      (super.noSuchMethod(Invocation.getter(#watchlistMovieVar),
              returnValue: <_i3.GomuflixMovieEntity>[])
          as List<_i3.GomuflixMovieEntity>);
  @override
  set watchlistMovieVar(List<_i3.GomuflixMovieEntity>? _watchlistMovieVar) =>
      super.noSuchMethod(
          Invocation.setter(#watchlistMovieVar, _watchlistMovieVar),
          returnValueForMissingStub: null);
  @override
  List<_i3.GomuflixMovieEntity> get gomuMovie =>
      (super.noSuchMethod(Invocation.getter(#gomuMovie),
              returnValue: <_i3.GomuflixMovieEntity>[])
          as List<_i3.GomuflixMovieEntity>);
  @override
  set gomuMovie(List<_i3.GomuflixMovieEntity>? _gomuMovie) =>
      super.noSuchMethod(Invocation.setter(#gomuMovie, _gomuMovie),
          returnValueForMissingStub: null);
  @override
  _i4.RequestState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: _i4.RequestState.empty) as _i4.RequestState);
  @override
  set state(_i4.RequestState? _state) =>
      super.noSuchMethod(Invocation.setter(#state, _state),
          returnValueForMissingStub: null);
  @override
  String get messageVar =>
      (super.noSuchMethod(Invocation.getter(#messageVar), returnValue: '')
          as String);
  @override
  set messageVar(String? _messageVar) =>
      super.noSuchMethod(Invocation.setter(#messageVar, _messageVar),
          returnValueForMissingStub: null);
  @override
  List<_i3.GomuflixMovieEntity> get nowPlayingMovies =>
      (super.noSuchMethod(Invocation.getter(#nowPlayingMovies),
              returnValue: <_i3.GomuflixMovieEntity>[])
          as List<_i3.GomuflixMovieEntity>);
  @override
  List<_i3.GomuflixMovieEntity> get popularMovies =>
      (super.noSuchMethod(Invocation.getter(#popularMovies),
              returnValue: <_i3.GomuflixMovieEntity>[])
          as List<_i3.GomuflixMovieEntity>);
  @override
  List<_i3.GomuflixMovieEntity> get topRatedMovies =>
      (super.noSuchMethod(Invocation.getter(#topRatedMovies),
              returnValue: <_i3.GomuflixMovieEntity>[])
          as List<_i3.GomuflixMovieEntity>);
  @override
  List<_i3.GomuflixMovieEntity> get watchlistMovies =>
      (super.noSuchMethod(Invocation.getter(#watchlistMovies),
              returnValue: <_i3.GomuflixMovieEntity>[])
          as List<_i3.GomuflixMovieEntity>);
  @override
  List<_i3.GomuflixMovieEntity> get movie =>
      (super.noSuchMethod(Invocation.getter(#movie),
              returnValue: <_i3.GomuflixMovieEntity>[])
          as List<_i3.GomuflixMovieEntity>);
  @override
  _i4.RequestState get gomuMovieNowPlayingState =>
      (super.noSuchMethod(Invocation.getter(#gomuMovieNowPlayingState),
          returnValue: _i4.RequestState.empty) as _i4.RequestState);
  @override
  _i4.RequestState get gomuMoviePopularState =>
      (super.noSuchMethod(Invocation.getter(#gomuMoviePopularState),
          returnValue: _i4.RequestState.empty) as _i4.RequestState);
  @override
  _i4.RequestState get gomuMovieTopRatedState =>
      (super.noSuchMethod(Invocation.getter(#gomuMovieTopRatedState),
          returnValue: _i4.RequestState.empty) as _i4.RequestState);
  @override
  _i4.RequestState get gomuMovieWatchlistState =>
      (super.noSuchMethod(Invocation.getter(#gomuMovieWatchlistState),
          returnValue: _i4.RequestState.empty) as _i4.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i5.Future<void> syncGomuMovieNowPlaying() =>
      (super.noSuchMethod(Invocation.method(#syncGomuMovieNowPlaying, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> syncGomuMoviePopular() =>
      (super.noSuchMethod(Invocation.method(#syncGomuMoviePopular, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> syncGomuMovieTopRated() =>
      (super.noSuchMethod(Invocation.method(#syncGomuMovieTopRated, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> syncGomuMovieWatchlist() =>
      (super.noSuchMethod(Invocation.method(#syncGomuMovieWatchlist, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  void addListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i6.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}
