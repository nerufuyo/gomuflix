// Mocks generated by Mockito 5.2.0 from annotations
// in gomutv/test/presentation/bloc/gomu_tv_watchlist_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:bloc/bloc.dart' as _i6;
import 'package:dartz/dartz.dart' as _i4;
import 'package:gomucore/gomucore.dart' as _i7;
import 'package:gomutv/domain/entities/gomu_tv_entity.dart' as _i8;
import 'package:gomutv/domain/usecase/get_gomu_tv_watchlist_case.dart' as _i2;
import 'package:gomutv/gomutv.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetGomuflixTvWatchlistCase_0 extends _i1.Fake
    implements _i2.GetGomuflixTvWatchlistCase {}

class _FakeGetGomuflixTvWatchlistStatusCase_1 extends _i1.Fake
    implements _i2.GetGomuflixTvWatchlistStatusCase {}

class _FakeSaveGomuflixTvWatchlistCase_2 extends _i1.Fake
    implements _i2.SaveGomuflixTvWatchlistCase {}

class _FakeRemoveGomuflixTvWatchlistCase_3 extends _i1.Fake
    implements _i2.RemoveGomuflixTvWatchlistCase {}

class _FakeGomuTvWatchlistState_4 extends _i1.Fake
    implements _i3.GomuTvWatchlistState {}

class _FakeGomuflixTvRepository_5 extends _i1.Fake
    implements _i3.GomuflixTvRepository {}

class _FakeEither_6<L, R> extends _i1.Fake implements _i4.Either<L, R> {}

/// A class which mocks [GomuTvWatchlistBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockGomuTvWatchlistBloc extends _i1.Mock
    implements _i3.GomuTvWatchlistBloc {
  MockGomuTvWatchlistBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetGomuflixTvWatchlistCase get getGomuTvWatchlistCase =>
      (super.noSuchMethod(Invocation.getter(#getGomuTvWatchlistCase),
              returnValue: _FakeGetGomuflixTvWatchlistCase_0())
          as _i2.GetGomuflixTvWatchlistCase);
  @override
  _i2.GetGomuflixTvWatchlistStatusCase get getGomuTvWatchlistStatusCase =>
      (super.noSuchMethod(Invocation.getter(#getGomuTvWatchlistStatusCase),
              returnValue: _FakeGetGomuflixTvWatchlistStatusCase_1())
          as _i2.GetGomuflixTvWatchlistStatusCase);
  @override
  _i2.SaveGomuflixTvWatchlistCase get saveGomuTvWatchlistCase =>
      (super.noSuchMethod(Invocation.getter(#saveGomuTvWatchlistCase),
              returnValue: _FakeSaveGomuflixTvWatchlistCase_2())
          as _i2.SaveGomuflixTvWatchlistCase);
  @override
  _i2.RemoveGomuflixTvWatchlistCase get removeGomuTvWatchlistCase =>
      (super.noSuchMethod(Invocation.getter(#removeGomuTvWatchlistCase),
              returnValue: _FakeRemoveGomuflixTvWatchlistCase_3())
          as _i2.RemoveGomuflixTvWatchlistCase);
  @override
  _i3.GomuTvWatchlistState get state => (super.noSuchMethod(
      Invocation.getter(#state),
      returnValue: _FakeGomuTvWatchlistState_4()) as _i3.GomuTvWatchlistState);
  @override
  _i5.Stream<_i3.GomuTvWatchlistState> get stream =>
      (super.noSuchMethod(Invocation.getter(#stream),
              returnValue: Stream<_i3.GomuTvWatchlistState>.empty())
          as _i5.Stream<_i3.GomuTvWatchlistState>);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  void add(_i3.GomuTvWatchlistEvent? event) =>
      super.noSuchMethod(Invocation.method(#add, [event]),
          returnValueForMissingStub: null);
  @override
  void onEvent(_i3.GomuTvWatchlistEvent? event) =>
      super.noSuchMethod(Invocation.method(#onEvent, [event]),
          returnValueForMissingStub: null);
  @override
  void emit(_i3.GomuTvWatchlistState? state) =>
      super.noSuchMethod(Invocation.method(#emit, [state]),
          returnValueForMissingStub: null);
  @override
  void on<E extends _i3.GomuTvWatchlistEvent>(
          _i6.EventHandler<E, _i3.GomuTvWatchlistState>? handler,
          {_i6.EventTransformer<E>? transformer}) =>
      super.noSuchMethod(
          Invocation.method(#on, [handler], {#transformer: transformer}),
          returnValueForMissingStub: null);
  @override
  void onTransition(
          _i6.Transition<_i3.GomuTvWatchlistEvent, _i3.GomuTvWatchlistState>?
              transition) =>
      super.noSuchMethod(Invocation.method(#onTransition, [transition]),
          returnValueForMissingStub: null);
  @override
  _i5.Future<void> close() => (super.noSuchMethod(Invocation.method(#close, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  void onChange(_i6.Change<_i3.GomuTvWatchlistState>? change) =>
      super.noSuchMethod(Invocation.method(#onChange, [change]),
          returnValueForMissingStub: null);
  @override
  void addError(Object? error, [StackTrace? stackTrace]) =>
      super.noSuchMethod(Invocation.method(#addError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  void onError(Object? error, StackTrace? stackTrace) =>
      super.noSuchMethod(Invocation.method(#onError, [error, stackTrace]),
          returnValueForMissingStub: null);
}

/// A class which mocks [GetGomuflixTvWatchlistCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetGomuflixTvWatchlistCase extends _i1.Mock
    implements _i2.GetGomuflixTvWatchlistCase {
  MockGetGomuflixTvWatchlistCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GomuflixTvRepository get data => (super.noSuchMethod(
      Invocation.getter(#data),
      returnValue: _FakeGomuflixTvRepository_5()) as _i3.GomuflixTvRepository);
  @override
  set data(_i3.GomuflixTvRepository? _data) =>
      super.noSuchMethod(Invocation.setter(#data, _data),
          returnValueForMissingStub: null);
  @override
  _i5.Future<_i4.Either<_i7.FailureCondition, List<_i8.GomuflixTvEntity>>>
      watchlistAction() => (super.noSuchMethod(
          Invocation.method(#watchlistAction, []),
          returnValue:
              Future<_i4.Either<_i7.FailureCondition, List<_i8.GomuflixTvEntity>>>.value(
                  _FakeEither_6<_i7.FailureCondition,
                      List<_i8.GomuflixTvEntity>>())) as _i5
          .Future<_i4.Either<_i7.FailureCondition, List<_i8.GomuflixTvEntity>>>);
}

/// A class which mocks [GetGomuflixTvWatchlistStatusCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetGomuflixTvWatchlistStatusCase extends _i1.Mock
    implements _i2.GetGomuflixTvWatchlistStatusCase {
  MockGetGomuflixTvWatchlistStatusCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GomuflixTvRepository get data => (super.noSuchMethod(
      Invocation.getter(#data),
      returnValue: _FakeGomuflixTvRepository_5()) as _i3.GomuflixTvRepository);
  @override
  set data(_i3.GomuflixTvRepository? _data) =>
      super.noSuchMethod(Invocation.setter(#data, _data),
          returnValueForMissingStub: null);
  @override
  _i5.Future<bool> watchlistStatusAction(int? id) =>
      (super.noSuchMethod(Invocation.method(#watchlistStatusAction, [id]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
}

/// A class which mocks [SaveGomuflixTvWatchlistCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveGomuflixTvWatchlistCase extends _i1.Mock
    implements _i2.SaveGomuflixTvWatchlistCase {
  MockSaveGomuflixTvWatchlistCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GomuflixTvRepository get data => (super.noSuchMethod(
      Invocation.getter(#data),
      returnValue: _FakeGomuflixTvRepository_5()) as _i3.GomuflixTvRepository);
  @override
  set data(_i3.GomuflixTvRepository? _data) =>
      super.noSuchMethod(Invocation.setter(#data, _data),
          returnValueForMissingStub: null);
  @override
  _i5.Future<_i4.Either<_i7.FailureCondition, String>> saveWatchlistAction(
          _i8.GomuflixTvDetailEntity? dataMovie) =>
      (super.noSuchMethod(Invocation.method(#saveWatchlistAction, [dataMovie]),
          returnValue: Future<_i4.Either<_i7.FailureCondition, String>>.value(
              _FakeEither_6<_i7.FailureCondition, String>())) as _i5
          .Future<_i4.Either<_i7.FailureCondition, String>>);
}

/// A class which mocks [RemoveGomuflixTvWatchlistCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveGomuflixTvWatchlistCase extends _i1.Mock
    implements _i2.RemoveGomuflixTvWatchlistCase {
  MockRemoveGomuflixTvWatchlistCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GomuflixTvRepository get data => (super.noSuchMethod(
      Invocation.getter(#data),
      returnValue: _FakeGomuflixTvRepository_5()) as _i3.GomuflixTvRepository);
  @override
  set data(_i3.GomuflixTvRepository? _data) =>
      super.noSuchMethod(Invocation.setter(#data, _data),
          returnValueForMissingStub: null);
  @override
  _i5.Future<_i4.Either<_i7.FailureCondition, String>> removeWatchlistAction(
          _i8.GomuflixTvDetailEntity? dataMovie) =>
      (super.noSuchMethod(
          Invocation.method(#removeWatchlistAction, [dataMovie]),
          returnValue: Future<_i4.Either<_i7.FailureCondition, String>>.value(
              _FakeEither_6<_i7.FailureCondition, String>())) as _i5
          .Future<_i4.Either<_i7.FailureCondition, String>>);
}
